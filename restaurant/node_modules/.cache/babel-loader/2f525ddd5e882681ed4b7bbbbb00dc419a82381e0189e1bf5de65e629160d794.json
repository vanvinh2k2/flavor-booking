{"ast":null,"code":"import { LOGIN_SUCCESS, GET_ERROR, LOGOUT, FRIEND_CHAT, CONTACT_US, BASE_URL, REGISTER_SUCCESS } from \"./type\";\nimport axios from 'axios';\nconst config = {\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n};\nfunction configAuth(yourAuthToken) {\n  return {\n    headers: {\n      \"Content-type\": \"application/json\",\n      'Authorization': `Bearer ${yourAuthToken ? yourAuthToken : null}`\n    }\n  };\n}\nexport const login = async (email, password) => {\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post(`http://${BASE_URL}/auth/api/login`, body, config);\n    if (res.data.success === true) {\n      const result = {\n        type: LOGIN_SUCCESS,\n        payload: res.data.data\n      };\n      return result;\n    } else {\n      return {\n        type: GET_ERROR,\n        payload: res.data.message\n      };\n    }\n  } catch (e) {\n    return {\n      type: GET_ERROR,\n      payload: e\n    };\n  }\n};\nexport const register = async (title, email, address, phone, uid) => {\n  const body = JSON.stringify({\n    title,\n    email,\n    address,\n    phone\n  });\n  try {\n    const res = await axios.post(`http://${BASE_URL}/api/register-restaurant/${uid}`, body, config);\n    if (res.data.success === true) {\n      const result = {\n        type: REGISTER_SUCCESS,\n        payload: res.data.message\n      };\n      return result;\n    } else {\n      alert(res.data.message);\n      return {\n        type: GET_ERROR,\n        payload: res.data.message\n      };\n    }\n  } catch (e) {\n    alert(\"Error!\");\n    return {\n      type: GET_ERROR,\n      payload: e\n    };\n  }\n};\nexport const logout = async () => {\n  return {\n    type: LOGOUT,\n    payload: null\n  };\n};\nexport const friend_chat = async (uid, token) => {\n  try {\n    const res = await axios.get(`http://${BASE_URL}/api/friend-chat/${uid}`, configAuth(token));\n    if (res.data.success === true) {\n      const result = {\n        type: FRIEND_CHAT,\n        payload: res.data.data\n      };\n      return result;\n    } else {\n      return {\n        type: GET_ERROR,\n        payload: res.data.message\n      };\n    }\n  } catch (e) {\n    return {\n      type: GET_ERROR,\n      payload: e\n    };\n  }\n};\nexport const contact_us = async (subject, message, full_name, email, token) => {\n  const body = JSON.stringify({\n    subject,\n    message,\n    full_name,\n    email\n  });\n  try {\n    const res = await axios.post(`http://${BASE_URL}/api/contact-us`, body, configAuth(token));\n    if (res.data.success === true) {\n      const result = {\n        type: CONTACT_US,\n        payload: res.data.message\n      };\n      return result;\n    } else {\n      return {\n        type: GET_ERROR,\n        payload: res.data.message\n      };\n    }\n  } catch (e) {\n    return {\n      type: GET_ERROR,\n      payload: e\n    };\n  }\n};","map":{"version":3,"names":["LOGIN_SUCCESS","GET_ERROR","LOGOUT","FRIEND_CHAT","CONTACT_US","BASE_URL","REGISTER_SUCCESS","axios","config","headers","configAuth","yourAuthToken","login","email","password","body","JSON","stringify","res","post","data","success","result","type","payload","message","e","register","title","address","phone","uid","alert","logout","friend_chat","token","get","contact_us","subject","full_name"],"sources":["E:/LapTrinh/PY/restaurant/src/action/auth.js"],"sourcesContent":["import { LOGIN_SUCCESS, GET_ERROR, LOGOUT, FRIEND_CHAT, CONTACT_US, BASE_URL, REGISTER_SUCCESS } from \"./type\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst config = {\r\n    headers: {\r\n        \"Content-type\": \"application/json\",\r\n    }\r\n}\r\n\r\nfunction configAuth(yourAuthToken){\r\n    return {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n            'Authorization': `Bearer ${yourAuthToken?yourAuthToken:null}`,\r\n        }\r\n    };\r\n}\r\n\r\nexport const login = async (email, password)=>{\r\n    const body = JSON.stringify({email, password})\r\n    \r\n    try{\r\n        const res = await axios.post(`http://${BASE_URL}/auth/api/login`, body, config)\r\n        if(res.data.success === true){\r\n            const result = {\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data.data\r\n            }\r\n            return result\r\n        }\r\n        else{\r\n            return {\r\n                type: GET_ERROR,\r\n                payload: res.data.message\r\n            }\r\n        }\r\n        \r\n    } catch(e){\r\n        return {\r\n            type: GET_ERROR,\r\n            payload: e\r\n        }\r\n    }\r\n}\r\n\r\nexport const register = async (title, email, address, phone, uid)=>{\r\n    const body = JSON.stringify({title, email, address, phone})\r\n    \r\n    try{\r\n        const res = await axios.post(`http://${BASE_URL}/api/register-restaurant/${uid}`, body, config)\r\n        if(res.data.success === true){\r\n            const result = {\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data.message\r\n            }\r\n            return result\r\n        }\r\n        else{\r\n            alert(res.data.message)\r\n            return {\r\n                type: GET_ERROR,\r\n                payload: res.data.message\r\n            }\r\n        }\r\n        \r\n    } catch(e){\r\n        alert(\"Error!\")\r\n        return {\r\n            type: GET_ERROR,\r\n            payload: e\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = async() =>{\r\n    return {\r\n        type: LOGOUT,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const friend_chat = async(uid, token) =>{\r\n    try{\r\n        const res = await axios.get(`http://${BASE_URL}/api/friend-chat/${uid}`, configAuth(token))\r\n        if(res.data.success === true){\r\n            const result = {\r\n                type: FRIEND_CHAT,\r\n                payload: res.data.data\r\n            }\r\n            return result\r\n        }\r\n        else{\r\n            return {\r\n                type: GET_ERROR,\r\n                payload: res.data.message\r\n            }\r\n        }\r\n        \r\n    } catch(e){\r\n        return {\r\n            type: GET_ERROR,\r\n            payload: e\r\n        }\r\n    }\r\n}\r\n\r\nexport const contact_us = async(subject, message, full_name, email, token) =>{\r\n    const body = JSON.stringify({subject, message, full_name, email});\r\n    try{\r\n        const res = await axios.post(`http://${BASE_URL}/api/contact-us`, body, configAuth(token))\r\n        if(res.data.success === true){\r\n            const result = {\r\n                type: CONTACT_US,\r\n                payload: res.data.message\r\n            }\r\n            return result\r\n        }\r\n        else{\r\n            return {\r\n                type: GET_ERROR,\r\n                payload: res.data.message\r\n            }\r\n        }\r\n        \r\n    } catch(e){\r\n        return {\r\n            type: GET_ERROR,\r\n            payload: e\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}